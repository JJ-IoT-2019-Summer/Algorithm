# 명절이 되면, 홍익이 집에는 조카들이 놀러 온다.  떼를 쓰는 조카들을 달래기 위해 홍익이는 막대 과자를 하나씩 나눠준다.
# 조카들이 과자를 먹는 동안은 떼를 쓰지 않기 때문에, 홍익이는 조카들에게 최대한 긴 과자를 나눠주려고 한다.
# 그런데 나눠준 과자의 길이가 하나라도 다르면 조카끼리 싸움이 일어난다. 따라서 반드시 모든 조카에게 같은 길이의 막대 과자를 나눠주어야 한다.
# M명의 조카가 있고 N개의 과자가 있을 때, 조카 1명에게 줄 수 있는 막대 과자의 최대 길이를 구하라.
# 단, 막대 과자는 길이와 상관없이 여러 조각으로 나눠질 수 있지만, 과자를 하나로 합칠 수는 없다. 단, 막대 과자의 길이는 양의 정수여야 한다.를 들어 6개의 포도주 잔이 있고, 각각의 잔에 순서대로 6, 10, 13, 9, 8, 1 만큼의 포도주가 들어 있을 때, 첫 번째, 두 번째, 네 번째, 다섯 번째 포도주 잔을 선택하면 총 포도주 양이 33으로 최대로 마실 수 있다.
import sys
# sys.stdin = open("input.txt",'rt')

def Check(T):
    cnt = 0 
    #출발점 0 은 제외
    #N+1 인덱스인 L의 바로 전 휴게소까지 확인
    for i in range(1,N+2):
        #휴게소 사이의 거리가 "휴게소가 없는 구간의 최솟값" 보다 크면
        # 휴게소를 세울 수 있으므로 cnt 증가
        #ex  휴게소가 5,20에 있고, 휴게소가 없는 구간의 최솟값이 3이다 하면
        #20 - 5 - 1 -> 휴게소 간 거리 14
        #휴게소가 없는 구간의 최솟값 3 
        #이 구간에서는 4개의 휴게소를 지을 수 있음 
        cnt+= (arr[i] - arr[i-1]-1)//T

    #휴게소 개수 추가 
    return cnt 


#휴게소 개수 N
#더 지으려고 하는 휴게소의 개수 M
#고속도로의 길이 L

N,M,L = map(int,input().split())

arr = list(map(int,input().split()))

arr.append(0)
arr.append(L)
arr.sort()

#각 휴게소 사이 최솟값
left,right = 1 ,L
#각 휴게소 사이 최댓값 
res = 0


while left <= right:
    
    #휴게소가 없는 구간 길이의 최솟값 타겟
    mid = (left+right)//2
    
    # 휴게소가 없는 구간의 길이의 최솟값 (타겟)을 현재 존재하는 휴게소 사이에 추가하여
    # M개의 휴게소를 추가로 지울 수 있는 경우 
    if Check(mid)<=M:
        #최솟값 저장
        res = mid
        #휴게소가 없는 구간 길이의 최솟값을 더 적게하여 더 작은 값을 찾음
        right= mid-1
    else:
        left = mid+1
        

print(res)
